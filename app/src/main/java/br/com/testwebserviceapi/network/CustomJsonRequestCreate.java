package br.com.testwebserviceapi.network;import com.android.volley.AuthFailureError;import com.android.volley.NetworkResponse;import com.android.volley.ParseError;import com.android.volley.Response;import com.android.volley.Response.ErrorListener;import com.android.volley.Response.Listener;import com.android.volley.toolbox.HttpHeaderParser;import com.android.volley.toolbox.JsonRequest;import com.google.gson.Gson;import java.io.UnsupportedEncodingException;import java.util.HashMap;import java.util.Map;public class CustomJsonRequestCreate extends JsonRequest {    private Listener<Integer> response;    private String jsonObject;    private String url;    public CustomJsonRequestCreate(int method, String url, String jsonObject, Listener<Integer> response, ErrorListener errorListener) {        super(method, url, jsonObject, response, errorListener);        this.url = url;        this.jsonObject = jsonObject;        this.response = response;    }    @Override    public Map<String, String> getHeaders() throws AuthFailureError {        HashMap<String, String> headers = new HashMap<String, String>();        headers.put("Content-Type", "application/json");        headers.put("Accept", "application/json");        return headers;    }    @Override    protected Response<Integer> parseNetworkResponse(NetworkResponse response) {        try {            String jsonString = new String(response.data, HttpHeaderParser.parseCharset(response.headers));            return Response.success(new Integer(jsonString), HttpHeaderParser.parseCacheHeaders(response));        } catch (UnsupportedEncodingException e) {            return Response.error(new ParseError(e));        }    }}